'''
Generate stylesheet for stimuli version 2
'''
def get_interval_style(index: int, duration: int, delay: int) -> str:
    '''
    Get style for a particular interval (element class)

    :params:
    - index (int): interval number
    - duration (int): time taken to play the animation, in milliseconds
    - delay (int): time to wait before playing the animation, in milliseconds

    :return:
    - style for a particular interval (str)
    '''
    return (
        f'#stimulus1.interval{index} {{\n'
        f'    animation-name: spin-accelerate;\n'
        f'    animation-duration: {duration}ms;\n'
        f'    animation-timing-function: linear;\n'
        f'    animation-delay: {delay}ms;\n'
        f'}}\n'
    )


def generate_v2_style(
    stylesheet_path: str,
    num_intervals: int,
    initial_duration: int,
    duration_decay: int,
):
    '''
    Generate stylesheet for stimuli version 2

    :params:
    - stylesheet_path (str): path to stylesheet to be generated
    - num_intervals (int): number of times the animation should be played
    - initial_duration (int): time taken to play the animation, in milliseconds
    - duration_decay (int): the reduction in duration required at each interval, in milliseconds

    :return:
    - void (None)
    '''
    duration = initial_duration
    delay = 0

    with open(stylesheet_path, 'w') as stylesheet:
        header_comment = '/* This stylesheet is autogenerated by generate_v2_style.py */\n\n'
        stylesheet.write(header_comment)

        keyframe = (
            '@keyframes spin-accelerate {\n'
            '    100% {\n'
            '        transform: rotate(360deg);\n'
            '    }\n'
            '}\n'
        )
        stylesheet.write(keyframe)
        
        for interval in range(num_intervals):
            stylesheet.write('\n')

            interval_style = get_interval_style(interval, duration, delay)
            stylesheet.write(interval_style)

            # order of code below matters
            delay += duration
            duration -= duration_decay

        last_interval_style = (
            f'\n'
            f'#stimulus1.interval{num_intervals} {{\n'
            f'    animation-name: spin-accelerate;\n'
            f'    animation-duration: {duration}ms;\n'
            f'    animation-timing-function: linear;\n'
            f'    animation-delay: {delay}ms;\n'
            f'    animation-iteration-count: infinite;\n'
            f'}}\n'
        )
        stylesheet.write(last_interval_style)


if __name__ == '__main__':
    stylesheet_path = '/home/burntice/0_repositories/HP3603/stylesheets/v2.css'

    generate_v2_style(
        stylesheet_path,
        num_intervals=60,
        initial_duration=1000,
        duration_decay=10,
    )
